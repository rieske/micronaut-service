plugins {
    id("io.micronaut.application") version "1.5.0"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(16)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += ["-Xlint:deprecation", "-Xlint:unchecked"]
}

micronaut {
    version("3.0.0-M2")
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.rieske.*")
    }
}

dependencies {
    runtimeOnly("io.micronaut.sql:micronaut-jdbc-hikari")
    runtimeOnly("io.micronaut:micronaut-management")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.postgresql:postgresql")

    testImplementation("org.assertj:assertj-core")
    testImplementation("io.micronaut:micronaut-http-client")
    testRuntimeOnly("com.h2database:h2")
}

application {
    mainClass.set("com.rieske.micronaut.Application")
}

tasks.register("up", Exec) {
    dependsOn("build")
    inputs.files(file("$rootProject.projectDir}/docker-compose.yml")).withPathSensitivity(PathSensitivity.RELATIVE)
    workingDir(rootProject.projectDir)
    executable("docker-compose")
    args("up", "--build", "-d")
}

tasks.register("down", Exec) {
    workingDir(rootProject.projectDir)
    executable("docker-compose")
    args("down")
}

